name: Deploy Monorepo Services to EC2

on:
  repository_dispatch:
    types: [deploy-monorepo]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout imager-infrastructure (where this workflow lives)
        uses: actions/checkout@v4
        with:
          repository: angrystrike/imager-infrastructure
          path: imager-infrastructure
          token: ${{ secrets.REPO_DISPATCH_PAT }}

      - name: Checkout imager-view-service
        uses: actions/checkout@v4
        with:
          repository: angrystrike/imager-view-service
          path: imager-infrastructure/view-service
          token: ${{ secrets.REPO_DISPATCH_PAT }}

      - name: Checkout imager-upload-service
        uses: actions/checkout@v4
        with:
          repository: angrystrike/imager-upload-service
          path: imager-infrastructure/upload-service
          token: ${{ secrets.REPO_DISPATCH_PAT }}

      - name: Set up SSH agent
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}

      - name: Add EC2 host to known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts
          chmod 600 ~/.ssh/known_hosts

      - name: Deploy to EC2
        run: |
          # The EC2_TARGET_DIR secret should point to the root of your monorepo structure on EC2
          # (e.g., /home/ubuntu/imager)
          # The deploy.sh script will then navigate into view-service and upload-service
          ssh -o StrictHostKeyChecking=no \
            ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} \
            "cd ${{ secrets.EC2_TARGET_DIR }} && /home/ubuntu/deploy.sh"